indent = { tab-width = 2, unit = "  " }

# ---- C ---- #
[[language]]
name = "c"
language-servers = ["clangd", "scls"]
formatter = { command = "astyle" }

# ---- C++ ---- #
[[language]]
name = "cpp"
language-servers = ["clangd", "scls"]
formatter = { command = "astyle" }

# ---- Bash ---- #
[[language]]
name = "bash"
language-servers = ["bash-language-server", "scls"]

# ---- Json ---- #
[[language]]
name = "json"
formatter = { command = "biome", args = [
  "check",
  "--fix",
  "--config-path",
  "/home/othman/.config/biome.jsonc",
  "--stdin-file-path",
  "file.json",
] }
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
  "scls",
]

# ---- Typescript ---- #
[[language]]
name = "typescript"
roots = ["deno.json", "deno.jsonc", "package.json"]
auto-format = false
formatter = { command = "biome", args = [
  "check",
  "--fix",
  "--config-path",
  "/home/othman/.config/biome.jsonc",
  "--stdin-file-path",
  "file.ts",
] }
language-servers = [
  "deno-lsp",
  "biome",
  "scls",
  # { name = "typescript-language-server", except-features = [
  #   "format",
  # ] },
]

# ---- Javascript ---- #
[[language]]
name = "javascript"
roots = ["deno.json", "deno.jsonc", "package.json"]
auto-format = false
formatter = { command = "biome", args = [
  "check",
  "--fix",
  "--config-path",
  "/home/othman/.config/biome.jsonc",
  "--stdin-file-path",
  "file.js",
] }
language-servers = [
  "deno-lsp",
  "biome",
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "scls",
]


# ---- Jsx ---- #
[[language]]
name = "jsx"
roots = ["deno.json", "deno.jsonc"]
auto-format = false
formatter = { command = "biome", args = [
  "check",
  "--fix",
  "--config-path",
  "/home/othman/.config/biome.jsonc",
  "--stdin-file-path",
  "file.jsx",
] }
language-servers = [
  "deno-lsp",
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "vscode-html-language-server",
  "superhtml",
  "biome",
  "scls",
]

# ---- Tsx ---- #
[[language]]
name = "tsx"
roots = ["deno.json", "deno.jsonc"]
auto-format = false
formatter = { command = "biome", args = [
  "check",
  "--fix",
  "--config-path",
  "/home/othman/.config/biome.jsonc",
  "--stdin-file-path",
  "file.tsx",
] }
language-servers = [
  # { name = "typescript-language-server", except-features = [
  #   "format",
  # ] },
  "vscode-html-language-server",
  "superhtml",
  "biome",
  "deno-lsp",
  "scls",
]

# ---- Deno LSP ---- #
[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
config.deno.enable = true

# ---- Biome LSP ---- #
[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }

# ---- Rust---- #
[[language]]
name = "rust"
formatter = { command = "rustfmt", args = [
  "--config-path",
  "/home/othman/.config/rustfmt.toml",
] }
language-servers = ["rust-analyzer", "scls"]
indent = { tab-width = 2, unit = "  " }

# ---- JSON ---- #
[[language]]
name = "json"
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
  "scls",
]

# ---- Markdown ---- #
[[language]]
name = "markdown"
formatter = { command = "prettier", args = [
  "--write",
  "--config",
  "/home/othman/.config/.prettierrc.json",
  "--stdin-filepath",
  "file.md",
] }
language-servers = ["marksman", "markdown-oxide", "scls"]


# ---- Svelte ---- #
[[language]]
name = "svelte"
language-servers = [
  "biome",
  { name = "svelteserver", except-features = [
    "format",
  ] },
  "scls",
]

# ---- SCLS ---- #
# introduce new language server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 100          # set max completion results len for each group: words, snippets, unicode-input
feature_words = false               # enable completion by word
feature_snippets = true             # enable snippets
snippets_first = true               # completions will return before snippets by default
snippets_inline_by_word_tail = true # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_unicode_input = false       # enable "unicode input"
feature_paths = true                # enable path completion
feature_citations = false           # enable citation completion (only on `citation` feature enabled)


# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/completion.log"

# append language server to existed languages
[[language]]
name = "rust"
language-servers = ["scls", "rust-analyzer"]

[[language]]
name = "git-commit"
language-servers = ["scls"]

# introduce a new language to enable completion on any doc by forcing set language with :set-language stub
[[language]]
name = "stub"
scope = "text.stub"
file-types = []
shebangs = []
roots = []
auto-format = false
language-servers = ["scls"]
