# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

scan_timeout = 360
command_timeout = 3600

format = """$directory$git_branch$git_status
$os$character"""
right_format = """$all"""
continuation_prompt = '❯❯'

[character]
success_symbol = '[❯](bold green)'
error_symbol = '[✗](bold red)'

[time]
disabled = true
use_12hr = true
format = " [$time]($style) "
time_format = "%I:%M%P"

[cmd_duration]
format = "  [$duration]($style) "
min_time = 5_000
show_notifications = false
min_time_to_notify = 30_000

# Nerd Fonts preset
[aws]
symbol = "  "
format = "on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)"

[buf]
symbol = " "
format = "with [$symbol($version )]($style)"

[bun]
format = " [$symbol($version )]($style)"
symbol = " "
detect_files = ["bun.lock", "bun.lockb", "bunfig.toml"]
style = "bold white"

[c]
symbol = "  "
format = ' [$symbol($name $version )]($style)'
detect_extensions = ["c", "h"]
commands = [["clang", "--version"], ["gcc", "--version"], ["cc", "--version"]]
style = "149 bold"

[custom.cpp]
disabled = false
command = "which-cpp"
style = 'bold blue'
symbol = "  "
detect_extensions = ["cpp", "cc", "cxx", "hpp", "hxx", "hh", "ipp"]
format = '[$symbol($output )]($style)'

[conda]
symbol = " "
format = " [$symbol$environment]($style) "

[crystal]
symbol = " "
format = " [$symbol($version )]($style)"

[dart]
symbol = " "
format = " [$symbol($version )]($style)"

[deno]
symbol = " "
detect_files = [
  "deno.json",
  "deno.jsonc",
  "deno.lock",
  "mod.ts",
  "deps.ts",
  "mod.js",
  "deps.js",
]
version_format = "v${raw}"
format = " [$symbol($version )]($style)"

[directory]
read_only = " 󰌾"
truncate_to_repo = false
truncation_length = 100
style = "blue bold"

[docker_context]
symbol = " "
format = " [$symbol$context]($style) "

[elixir]
symbol = " "
format = " [$symbol($version \\(OTP $otp_version\\) )]($style)"

[elm]
symbol = " "
format = " [$symbol($version )]($style)"

[fennel]
symbol = " "
format = " [$symbol($version )]($style)"

[fossil_branch]
symbol = ""

[git_branch]
symbol = " "
format = "[$symbol$branch(:$remote_branch)]($style) "

[git_commit]
tag_symbol = '  '
tag_disabled = false

[git_status]
conflicted = '='
ahead = '⇡'
behind = '⇣'
diverged = '⇕'
up_to_date = ''
untracked = '?'
stashed = ''
modified = ''
staged = '[++\($count\)](green)'
renamed = '»'
deleted = '✘'

[golang]
symbol = " "
format = " [$symbol($version )]($style)"

[guix_shell]
symbol = " "
format = " [$symbol]($style) "

[haskell]
symbol = " "
format = " [$symbol($version )]($style)"

[haxe]
symbol = " "
format = " [$symbol($version )]($style)"

[hg_branch]
symbol = " "

[hostname]
ssh_symbol = " "
format = " [$ssh_symbol$hostname]($style) in "

[java]
symbol = " "
format = " [${symbol}(${version} )]($style)"

[julia]
symbol = " "
format = " [$symbol($version )]($style)"

[kotlin]
symbol = " "
format = " [$symbol($version )]($style)"

[lua]
symbol = " "
format = " [$symbol($version )]($style)"
detect_folders = []

[memory_usage]
symbol = " "
format = " $symbol [${ram}( | ${swap})]($style) "
threshold = 50
disabled = true

[meson]
symbol = "󰔷 "
format = " [$symbol$project]($style) "

[nim]
symbol = "󰆥 "
format = " [$symbol($version )]($style)"

[nix_shell]
symbol = " "
format = " [$symbol$state( \\($name\\))]($style) "

[nodejs]
symbol = " "
format = " [$symbol($version)]($style) "
detect_extensions = ["mjs", "cjs", "mts", "cts"]
detect_files = [".node-version", ".nvmrc", "tsconfig.json"]
detect_folders = []

[ocaml]
symbol = " "
format = " [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)"

[os]
disabled = false

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Void = " "
Windows = "󰍲 "

[package]
symbol = "󰏗 "
format = " [$symbol$version]($style) "
disabled = false

[perl]
symbol = " "
format = " [$symbol($version )]($style)"

[php]
symbol = "󰌟 "
format = " [$symbol($version )]($style)"

[pijul_channel]
symbol = " "

[python]
symbol = " "
format = " [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)"

[rlang]
symbol = "󰟔 "
format = " [$symbol($version )]($style)"

[ruby]
symbol = " "
format = " [$symbol($version )]($style)"

[rust]
symbol = "󱘗 "
format = " [$symbol($version )]($style)"
style = "bold #DD6800"

[scala]
symbol = " "
format = " [$symbol($version )]($style)"

[swift]
symbol = " "
format = " [$symbol($version )]($style)"

[zig]
symbol = " "
format = " [$symbol($version )]($style)"

[gradle]
symbol = " "
format = " [$symbol($version )]($style)"
disabled = true

[shell]
disabled = true
bash_indicator = " "
zsh_indicator = " "
format = "[$indicator]($style) "

[status]
disabled = false
symbol = '🔴 '
success_symbol = ''
format = '[\[$symbol$common_meaning$signal_name$maybe_int\]]($style) '
map_symbol = true
pipestatus = false

[git_metrics]
disabled = true
added_style = 'bold green'
format = '[+$added]($added_style)/[-$deleted]($deleted_style) '
deleted_style = "bold red"
only_nonzero_diffs = true
ignore_submodules = false

[dotnet]
disabled = true
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = [
  "global.json",
  "project.json",
  "Directory.Build.props",
  "Directory.Build.targets",
  "Packages.props",
  "Program.cs",
]
detect_folders = []
format = "[( )(  )]()"
heuristic = true
symbol = ".NET "
version_format = "v"
