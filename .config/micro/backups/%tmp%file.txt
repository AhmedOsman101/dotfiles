The general form of an if/else statement is

• The reserved word if begins the if/else statement. 
• The condition is a Boolean expression that determines whether or not the if block or the else block are executed. A colon (:) must follow the condition. 
• The if block is a block of one or more statements to be executed if the condition is true. As with all blocks, it must be indented by more spaces than the if line. This part of the if statement is sometimes called the body of the if. 
• The reserved word else begins the second part of the if/else statement. A colon (:) must follow the else. 
• The else block is a block of one or more statements to be executed if the condition is false. It must be indented more spaces than the else line. This part of the if/else statement is sometimes called the body of the else


Nested If/Else Conditional Statements

if value >= 0: 
 if value <=10:
 	print(value, "is in range")
 else:
print(value, "is too small")
else: 
print(value, "is too large")
print ("Done")


كلية تكنولوجيا الصناعة والطاقة

Nested If/Else Conditional Statements

6

value = eval(input("enter an integer value in the range 0.„.10:" )) 
if value >= 0:
if value <=10:
print(valuej "is in range")

else:
print(valuej "is too small") 
print ("Done")

value = eval(input("enter an integer value in the range 0.„.10:" )) 
if value >= 0:
if value <=10:
print(valuej "is in range")

else:
print(valuej "is too small") 
print ("Done")


كلية تكنولوجيا الصناعة والطاقة

Multiple Decision-Making Statements

7

Elif:The elif keyword is Python's way of saying "if the 
previous conditions were not true, then try this condition".
a = 200
b = 33
if b > a:
print("b is greater than a") 
elif a == b:
print("a and b are equal") 
else:
print("a is greater than b")


كلية تكنولوجيا الصناعة والطاقة

8

value = eval(input("Enter an integer in the range 0…5:")) 
if value < 0: 
 print("Too small") 
elif value == 0: 
 print("Zero") 
elif value == 1: 
 print("one") 
elif value == 2: 
 print("two") 
elif value == 3: 
 print("three") 
else: 
 print("Too large") 
print("Done") 


كلية تكنولوجيا الصناعة والطاقة

9

1 value = eval(input("Enter an integer in the range 
2 if value < 0:
3 print("Too small")
4 elif value == 0: 
5 print("Zero")
elif value == 1: 
7 print( "one")
8 elif value == 2: 
9 print("two")
19 elif value == 3: 
11 print("three")
12 else:
13 print("Too large") 
14 print("Done")
15


Expressions of Decision-Making Conditional Statements كلية تكنولوجيا الصناعة والطاقة

10

# Acquire a number from the user and print its absolute value. 
n = eval(input("Entex a number: "))
print ("|" , n, ' | = ' , (-n if n < 0 else n),sep="" )

a = 330 
b = 330 
print("A") if a > b else print("=") if a == b else print("B")

C: > Users > mohamd > average.py > ...
1 # Acquire a number from the user and print its absolute value
2 n = eval(input("Entex a number: "))
3 print ("I" , n, ' | = ’ , (-n if n < 0 else n),sep="" )


كلية تكنولوجيا الصناعة والطاقة

Looping is a program or script procedure that performs repetitive (or 
iterative) tasks. The loop is a sequence of instructions (a block) that is 
executed repeatedly while or until some condition is met or satisfied. 
Each repetition is called an iteration..

11

Iterative Control Structure 


كلية تكنولوجيا الصناعة والطاقة

print (1) 
print (2) 
print (3) 
print (4) 
print (5)

12

The While Loop
Putting more than one condition in the if statement using(or , and)
Output 
1
2 
3 
4 
5
How would you write the code to 
count to 10,000!


كلية تكنولوجيا الصناعة والطاقة

13

While Control
count = 1 
while count <= 5: 
 print (count) 
 count += 1
Output 
1 
2 
3 
4 
5


كلية تكنولوجيا الصناعة والطاقة

14

While Control
count = 1 
while count <= 5: 
 print (count) 
 count += 1
Output 

i = 1
while i < 6:
print(i) 
i += 1
else:
print("i is no longer less 
than 6")

i =1
while i <6:
print(i) 
 i +=1
else:
 print("i is no longer less 
than 6")


كلية تكنولوجيا الصناعة والطاقة

15

While Control

sum = 0
done = False 
while not done:
 val = eval(input("Enter positive integer (999 quits):")) 
 if val < 0:
 print("Negative value", val, "ignored") 
 continue # Skip rest of body for this iteration
 if val != 999: 
 print("Tallying", val)
 sum += val
 else:
 done = (val == 999); # 999 entry exits loop 
print("sum =", sum)


كلية تكنولوجيا الصناعة والطاقة

16

The break Statement
With the break statement 
we can stop the loop even 
if the while condition is 
true: i = 0
while i < 6:
 i += 1
 if i == 3: 
 continue
 print(i)
# Note that number 3 is 
missing in the result

With the continue statement we 
can stop the current iteration, 
and continue with the next loop

The continue Statement

 #Note that 
number 3 is 
missing in the 
i = 1 result
while i < 6:
print(i)
if (i == 3):
break 
i += 1

The For Loop

In Python the "while" loop is used where the programmer cannot anticipate how frequently a loop will be performed (i.e. an indefinite loop).

for n in range(1, 6):
	print(n)
print('n contains:', n )


The For Loop (Else in For Loop)

Print all numbers from 0 to 5, and print a message when the loop Finally finished

for x in range(6):
  print(x) 
else:
  print("Finally finished!"))

The else keyword in a for loop specifies a block of code to be executed when the loop is finished


The For Loop

With the break statement we can stop the loop even if the while condition is true

for x in range(6): 
 if x==3: break 
 print(x)
else:
 print("Finally finished!")

#If the loop breaks, the else block is not executed.

for x in range(6):
 if x==3: continue
 print(x)
else:
 print("Finally finished!")

With the continue statement we can stop the current iteration, and continue with the next loop
