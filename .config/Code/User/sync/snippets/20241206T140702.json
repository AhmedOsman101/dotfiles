{"version":1,"content":"{\"cpp.json\":\"{\\n\\t\\\"init\\\": {\\n\\t\\t\\\"prefix\\\": \\\"init\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"#include <iostream>\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"using namespace std;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"int main() {\\\",\\n\\t\\t\\t\\\"  $1\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"  return 0;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t]\\n\\t},\\n\\t\\\"function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"fn\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"$1 $2($3) {\\\",\\n\\t\\t\\t\\\"  $4\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t]\\n\\t}\\n}\\n\",\"javascriptreact.json\":\"{\\n\\t\\\"rfc\\\": {\\n\\t\\t\\\"prefix\\\": \\\"rfc\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export default function $1 () {\\\",\\n\\t\\t\\t\\\"    return (\\\",\\n\\t\\t\\t\\\"        <>\\\",\\n\\t\\t\\t\\\"            <div>$1</div>\\\",\\n\\t\\t\\t\\\"        </>\\\",\\n\\t\\t\\t\\\"    );\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"rafc\\\": {\\n\\t\\t\\\"prefix\\\": \\\"rafc\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $1 = () => {\\\",\\n\\t\\t\\t\\\"  return (\\\",\\n\\t\\t\\t\\\"    <>\\\",\\n\\t\\t\\t\\\"      <div>$1</div>\\\",\\n\\t\\t\\t\\\"    </>\\\",\\n\\t\\t\\t\\\"  )\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $1\\\",\\n\\t\\t\\t\\\"$0\\\"\\n\\t\\t]\\n\\t}\\n}\\n\",\"markdown.json\":\"{\\n\\t\\\"CenterTagImage\\\": {\\n\\t\\t\\\"prefix\\\": \\\"ceni\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<center style='padding: 1rem; padding-bottom: 0.1rem;'>\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"<img src='${1:images/contact.png}' alt='${2:description}' style='width: 100%; border-radius: 10px;' />\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"</center>\\\",\\n\\t\\t\\t\\\"$3\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Insert an image that's horizontally centered\\\"\\n\\t},\\n\\t\\\"CenterTagImageLogo\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cenl\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<center style='padding: 1rem; padding-bottom: 0.1rem;'>\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"<img src='${1:images/contact.png}' alt='${2:description}' style='width: 100%; border-radius: 10px; border-bottom-right-radius: 0px;' />\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"</center>\\\",\\n\\t\\t\\t\\\"$3\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Insert an image that's horizontally centered with no border radius at bottom right corner\\\"\\n\\t},\\n\\t\\\"CenterImage\\\": {\\n\\t\\t\\\"prefix\\\": \\\"ice\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<center style='padding: 1rem; padding-bottom: 0.1rem;'>\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"![${1:description}](${2:./images/})\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"</center>\\\",\\n\\t\\t\\t\\\"$3\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Insert an image that's horizontally centered\\\"\\n\\t},\\n\\t\\\"New Code Section\\\": {\\n\\t\\t\\\"prefix\\\": \\\"nsc\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"---\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"### $1:\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"```$2\\\",\\n\\t\\t\\t\\\"$3\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"```\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"New section with code block\\\"\\n\\t},\\n}\\n\",\"typescript.json\":\"{\\n\\t\\\"arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"arrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"const arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"carrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"const async arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"csarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = async ($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export const arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"xarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export deafult const arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"darrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $method\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export deafult const async arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"dsarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $method\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export const async arrow function\\\": {\\n\\t\\t\\\"prefix\\\": \\\"xsarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $method = async ($param) => {\\\",\\n\\t\\t\\t\\\"  $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $method\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export deafult constant\\\": {\\n\\t\\t\\\"prefix\\\": \\\"dcon\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $1 = $2;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $1\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export constant\\\": {\\n\\t\\t\\\"prefix\\\": \\\"xcon\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $1 = $2;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t]\\n\\t}\\n}\\n\",\"global.code-snippets\":\"{\\n\\t\\\"arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"arrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"const arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"carrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"const async arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"csarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = async ($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export const arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"xarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  $0\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export deafult const arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"darrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = ($param) => {\\\",\\n\\t\\t\\t\\\"  // $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $method\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export deafult const async arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"dsarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $method = async ($param) => {\\\",\\n\\t\\t\\t\\\"  // $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $method\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export const async arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"xsarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $method = async ($param) => {\\\",\\n\\t\\t\\t\\\"  // $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t]\\n\\t},\\n\\t\\\"export default const async arrow function\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"dsarrow\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $method = async ($param) => {\\\",\\n\\t\\t\\t\\\"  // $body\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $method\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export deafult constant\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"dcon\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const $1 = $2;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $1\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"export constant\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,jsx,tsx\\\",\\n\\t\\t\\\"prefix\\\": \\\"xcon\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const $1 = $2;\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t]\\n\\t},\\n\\t\\\"Pinia Options Store Boilerplate\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript\\\",\\n\\t\\t\\\"prefix\\\": \\\"pinia-options\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { defineStore, acceptHMRUpdate } from 'pinia'\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export const use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store = defineStore('$TM_FILENAME_BASE', {\\\",\\n\\t\\t\\t\\\" state: () => ({\\\",\\n\\t\\t\\t\\\"   $0\\\",\\n\\t\\t\\t\\\" }),\\\",\\n\\t\\t\\t\\\" getters: {},\\\",\\n\\t\\t\\t\\\" actions: {},\\\",\\n\\t\\t\\t\\\"})\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"if (import.meta.hot) {\\\",\\n\\t\\t\\t\\\" import.meta.hot.accept(acceptHMRUpdate(use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store, import.meta.hot))\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Bootstrap the code needed for a Vue.js Pinia Options Store file\\\"\\n\\t},\\n\\t\\\"Pinia Setup Store Boilerplate\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript\\\",\\n\\t\\t\\\"prefix\\\": \\\"pinia-setup\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import { defineStore, acceptHMRUpdate } from 'pinia'\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export const use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store = defineStore('$TM_FILENAME_BASE', () => {\\\",\\n\\t\\t\\t\\\" $0\\\",\\n\\t\\t\\t\\\" return {}\\\",\\n\\t\\t\\t\\\"})\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"if (import.meta.hot) {\\\",\\n\\t\\t\\t\\\" import.meta.hot.accept(acceptHMRUpdate(use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store, import.meta.hot))\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Bootstrap the code needed for a Vue.js Pinia Setup Store file\\\"\\n\\t},\\n\\t\\\"Define props in typescript\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,vue\\\",\\n\\t\\t\\\"prefix\\\": \\\"v-props\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const props = defineProps<{\\\",\\n\\t\\t\\t\\\"  $1: $2;\\\",\\n\\t\\t\\t\\\"$3\\\",\\n\\t\\t\\t\\\"}>();\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Defines a prop with typescript\\\"\\n\\t},\\n\\t\\\"Define props with defaults in typescript\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,vue\\\",\\n\\t\\t\\\"prefix\\\": \\\"v-dprops\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"const props = withDefaults(\\\",\\n\\t\\t\\t\\\"   defineProps<{\\\",\\n\\t\\t\\t\\\"     $1: $2;\\\",\\n\\t\\t\\t\\\"   }>(),\\\",\\n\\t\\t\\t\\\"   { $1: $3 }\\\",\\n\\t\\t\\t\\\");\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Defines a prop with typescript\\\"\\n\\t},\\n\\t\\\"Define pageProps Interface in typescript\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,vue\\\",\\n\\t\\t\\\"prefix\\\": \\\"v-iprops\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"interface PageProps {\\\",\\n\\t\\t\\t\\\"  $1: $2;\\\",\\n\\t\\t\\t\\\"  [key: string]: any;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Defines a prop with typescript\\\"\\n\\t},\\n\\t\\\"watercss cdn\\\": {\\n\\t\\t\\\"scope\\\": \\\"javascript,typescript,vue, html, blade\\\",\\n\\t\\t\\\"prefix\\\": \\\"water\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/water.css@2/out/$dark.css' />\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"watercss cdn, options water, dark, light\\\"\\n\\t},\\n\\t\\\"pphp\\\": {\\n\\t\\t\\\"scope\\\": \\\"html\\\",\\n\\t\\t\\\"prefix\\\": \\\"pphp\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<?= $1 ?>\\\"\\n\\t\\t],\\n\\t},\\n\\t\\\"PHP Skeleton\\\": {\\n\\t\\t\\\"scope\\\": \\\"html\\\",\\n\\t\\t\\\"prefix\\\": \\\"ps\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<?php\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"declare(strict_types=1);\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"php file with strict_types skeleton\\\"\\n\\t}\\n}\\n\",\"vue.json\":\"{\\n\\t//\\n}\\n\",\"shellscript.json\":\"{\\n\\t// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and\\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n\\t// same ids are connected.\\n\\t// Example:\\n\\t\\\"Add comment\\\": {\\n\\t\\t\\\"prefix\\\": \\\"com\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"# ---- $1 ----- #\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Adds a nicely formatted comment\\\"\\n\\t}\\n}\\n\",\"php.json\":\"{\\n\\t// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and\\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n\\t// same ids are connected.\\n\\t// Example:\\n\\t\\\"Basic input\\\": {\\n\\t\\t\\\"prefix\\\": \\\"input\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"trim(fgets(STDIN));\\\",\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"basic input\\\"\\n\\t}\\n}\\n\"}"}