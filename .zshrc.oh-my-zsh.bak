# shellcheck disable=SC1090,SC1091,SC1094,SC2001,SC2002,SC2016,SC2034,SC2086,SC2153,SC2154,SC2155,SC2181,SC2230,SC2296,SC2312
# Above line is because shellcheck doesn't support zsh
# ---- Increase the FUNCNEST limit ----- #
FUNCNEST=99999

# If you come from bash you might have to change your $PATH.
export PATH="$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH"

# Path to your Oh My Zsh installation.
export ZSH="$XDG_DATA_HOME"/oh-my-zsh

ZSH_THEME="archcraft"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto # update automatically without asking
# zstyle ':omz:update' mode reminder # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  fast-syntax-highlighting
  zsh-you-should-use
  zsh-auto-notify
  zsh-completions
  zsh-autocomplete
  zsh-autopair
  zsh-autosuggestions
  fzf-tab
  find-the-command
  git
  command-not-found
  copybuffer
  copyfile
  copypath
  dirhistory
  extract
)

#* KEY FIX: Add essential directories to $fpath AFTER sourcing Oh-My-Zsh
# fpath+="/usr/share/zsh/functions"

# Initialize completions
zstyle :compinstall filename "$HOME/.zshrc"

autoload -Uz compinit && compinit -i
# End of lines added by compinstall

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

source $ZSH/oh-my-zsh.sh

# ---- Prompt Starship ----- #
eval "$(starship init zsh)"

# ---- zsh options ----- #
setopt extendedglob
setopt ksh_arrays

# ---- History ----- #
export HISTFILE=~/.zsh_history
HISTSIZE=999999
SAVEHIST=$HISTSIZE
unsetopt extended_history
HISTDUP=erase
setopt share_history
setopt inc_append_history
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

noDuplicates ~/.zsh_history 2>/dev/null

# ---- Aliases ----- #
alias zshrc="micro ~/.zshrc"
alias bashrc="micro ~/.bashrc"
alias art="php artisan"
alias cls="clear"
alias reload="source ~/.zshrc && clear && neofetch"
alias pnp="pnpm"
alias npm="pnpm"
alias vim="nvim"
alias apt="nala"
# ---- Zoxide (better cd) ----- #
alias cd="z"
# ---- Eza (better ls) ----- #
alias ls="eza  --all --color=always --long --git --icons=always --no-time --no-user --sort name"
# ---- Trash-cli (better rm & rmdir) ----- #
alias rm="rmtrash"
alias rmdir="rmdirtrash"
# ---- Micro (better nano) ----- #
alias nano="micro"
# ---- ripgrep (better grep) ----- #
alias grep="rg"
alias python="python3"
alias pip="pip3"
alias getgpu="lspci -k -d ::03xx"
alias ocr="tesseract"
alias mc="micro"
alias lzg="lazygit"

# ---- On-demand rehash ----- #
zshcache_time="$(date +%s%N)"

autoload -Uz add-zsh-hook

rehash_precmd() {
  if [[ -e /var/cache/zsh/pacman ]]; then
    local paccache_time="$(date -r /var/cache/zsh/pacman +%s%N)"
    if ((zshcache_time < paccache_time)); then
      rehash
      zshcache_time="$paccache_time"
    fi
  fi
}

add-zsh-hook -Uz precmd rehash_precmd

# ---- pnpm ---- #
export PNPM_HOME="/home/othman/.local/share/pnpm"
case ":$PATH:" in
*":$PNPM_HOME:"*) ;;
*) export PATH="$PNPM_HOME:$PATH" ;;
esac

# ---- Atuin ---- #
case ":${PATH}:" in
*:"$HOME/.atuin/bin":*) ;;
*)
  # Prepending path in case a system-installed binary needs to be overridden
  export PATH="$HOME/.atuin/bin:$PATH"
  ;;
esac

eval "$(atuin init zsh)"

# ---- Yazi ---- #
yy() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd" || exit
  fi
  rm -f -- "$tmp"
}

# bun completions
[ -s "/home/othman/.bun/_bun" ] && source "/home/othman/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"

export PATH="$PATH:$HOME/.spicetify:$HOME/.local/bin:$HOME/scripts:$HOME/scripts/python:$BUN_INSTALL/bin"

. "$HOME/.asdf/asdf.sh"

. "$HOME/.cargo/env"

# Standard template for pandoc for converting to docx
export MRT="$HOME/Documents/backup/WordTemplates/Standard.dotx"

export TERM=xterm-256color
export COLORTERM=truecolor

# ---- FZF ----- #
source <(fzf --zsh)

# --- Use fd instead of fzf --- #
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
  cd)
    fzf --preview 'eza --tree --color=always {} | head -200' "$@"
    ;;
  export | unset)
    fzf --preview "eval 'echo {}'" "$@"
    ;;
  ssh)
    fzf --preview 'dig {}' "$@"
    ;;
  *)
    fzf --preview "$show_file_or_dir_preview" "$@"
    ;;
  esac
}

# ---- The fuck alias ----- #
eval "$(thefuck --alias)"

# ---- Zoxide (better cd) ---- #
eval "$(zoxide init zsh)"

export EDITOR="micro"

export STARSHIP_CONFIG="$HOME/.config/starship.toml"

export LIBVIRT_DEFAULT_URI='qemu:///system'

export MICRO_TRUECOLOR=1

export XCURSOR_THEME="Bibata"
export XCURSOR_SIZE="24"

# Biome Config
export NODE_PACKAGE_MANAGER="pnpm"
export BIOME_CONFIG_PATH="$HOME/.config/biome.jsonc"
export BIOME_BINARY="/usr/bin/biome"

# node version manager nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

export ARTISTIC_STYLE_OPTIONS="$HOME/.config/.astylerc"
export YSU_MESSAGE_POSITION="after"

# ---- Zoxide (better cd) ---- #
eval "$(zoxide init zsh)"

# ---- Key Bindings ---- #
# ---- Bind Home and End keys ---- #
bindkey "^[[H" beginning-of-line # Home
bindkey "^[[F" end-of-line       # End

# ---- Bind Delete key ---- #
bindkey "^[[3~" delete-char # Delete

# ---- Bind Ctrl+Arrow for moving by words ---- #
bindkey "^[[1;5C" forward-word  # Ctrl+Right
bindkey "^[[1;5D" backward-word # Ctrl+Left
